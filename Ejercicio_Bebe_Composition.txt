/* Estados del bebe */
enum class EstadoBebe {
    despierto, mimido, comiendo, limpio,
    sucio, llorando, viendoPocoyo, muerto, 
    feliz, jugando, riendo, molesto
}


/* Habilidades y SuperPoderes */
interface Habilidad {
    var nombre: String
    var activo: Boolean
    var descripcion: String?

    fun activar(): Boolean {
        if (activo) {
            return false
        } else {
            activo = true
            return true
        }
    }

    fun desactivar(): Boolean {
        if (!activo) {
            return false
        } else {
            activo = false
            return true
        }
    }
}

interface Habilidades {
    var capacidades: MutableList<Habilidad>

    fun activar_capacidad(nombre: String): Boolean {
        for (capacidad in capacidades) {
            if (capacidad.nombre == nombre) {
                return capacidad.activar()
            }
        }
        return false
    }

    fun agregar_capacidad(capacidad_nueva: Habilidad) {
        capacidades.add(capacidad_nueva)
    }

    fun descripcion(): String {
        return "${capacidades.size}: " + capacidades.joinToString(", ") { it.nombre }
    }
}

/* Clase Camisa */
class Camisa(val color: String, val diseño: String) {
    fun usar() {
        println("La camisa de color $color y diseño '$diseño' está siendo usada.")
    }
}

/* Clase Pañal */
class Panal(val marca: String, val color: String) {
    fun usar() {
        println("El pañal de marca $marca y color $color está siendo usado.")
    }
}

/* Clase Super Poder */
class SuperPoder(
    override var nombre: String,
    override var activo: Boolean,
    override var descripcion: String?
) : Habilidad


/* La clase del bebe */
class Bebe(
    var nombre: String,
    var hambre: Int,
    var suciedad: Int,
    var sueno: Int,
    var estado: EstadoBebe = EstadoBebe.despierto,
    
    val camisa: Camisa,   
    val panal: Panal
    
) : Habilidades {

    override var capacidades: MutableList<Habilidad> = mutableListOf()

/* Dormido y despierto */
    fun dormir() {
        if ((estado == EstadoBebe.despierto || estado == EstadoBebe.comiendo)
        && sueno > 49 && estado != EstadoBebe.muerto) {
            estado = EstadoBebe.mimido
        } else {
            return
        }
    }
    fun despertar() {
        if (estado == EstadoBebe.mimido || estado == EstadoBebe.muerto) {
            estado = EstadoBebe.despierto
        } else {
            return
        }
    }
/* Acciones que benefician al bebe */ 
    fun alimentar() {
        if (estado != EstadoBebe.muerto) {
            estado = EstadoBebe.comiendo
        } else {
            return
        }
    }
    fun cambiarPanal() {
        if (suciedad > 70) {
            estado = EstadoBebe.sucio
            println("$nombre necesita cambiar el pañal.")
            panal.usar()  
            suciedad = 0
        } else {
            estado = EstadoBebe.limpio
            println("$nombre tiene el pañal limpio.")
            panal.usar()  
        }
    }
    
    fun vestirse() {
        println("$nombre se está vistiendo...")
        camisa.usar()
    }
    
    fun jugar() {
        if (estado != EstadoBebe.muerto && estado != EstadoBebe.mimido) {
            estado = EstadoBebe.jugando
        } else {
            return
        }
    }
    fun verTele() {
        if (estado != EstadoBebe.muerto) {
            estado = EstadoBebe.viendoPocoyo
        } else {
            return
        }
    }
 
    fun hacerFeliz() {
        if (estado != EstadoBebe.muerto) {
            estado = EstadoBebe.feliz
        } else {
            return
        }
    }
 
    fun hacerleCosquillas() {
        if (estado != EstadoBebe.muerto) {
            estado = EstadoBebe.riendo
        } else {
            return
        }
    }
 
/* Acciones que perjudican al bebe */
    fun llorar() {
        if (estado != EstadoBebe.muerto) {
            estado = EstadoBebe.llorando
        } else {
            return
        }
    }
    fun ponerMolesto() {
        if (estado != EstadoBebe.muerto) {
            estado = EstadoBebe.molesto
            println("$nombre ya se enchucho.")
        } else {
            return
        }
    }
    fun conectarleSurdazo() {
        estado = EstadoBebe.muerto
    }
/* Actualizar y ver el estado del bebe*/
    fun revisarBebe() {
        when (estado) {
            EstadoBebe.mimido -> {
                sueno = 0
            }
            EstadoBebe.despierto -> {
                sueno += 3
                hambre += 5
                suciedad += 3
            }
            EstadoBebe.jugando -> {
                hambre += 5
                suciedad += 2
            }
            EstadoBebe.viendoPocoyo -> {
                hambre += 3
            }
            EstadoBebe.feliz -> {
                sueno -= 5
            }
            EstadoBebe.riendo -> {
                hambre -= 5
            }
            EstadoBebe.llorando -> {
                hambre += 10
                suciedad += 5
            }
            EstadoBebe.molesto -> {
                hambre += 10
            }
            else -> {
            /* No pasa nada */
            }
        }
    }
    fun estadoActual(): String {
        return when (estado) {
            EstadoBebe.despierto -> "El bebe esta despierto."
            EstadoBebe.muerto -> "El bebe esta tieso x_X."
            EstadoBebe.mimido -> "El bebe esta mimido."
            EstadoBebe.comiendo -> "El bebe esta comiendose un manguito, CLASIKO."
            EstadoBebe.llorando -> "El bebe esta llorando."
            EstadoBebe.jugando -> "El bebe esta jugando bien agustin."
            EstadoBebe.viendoPocoyo -> "El bebe esta viendo Pocoyo."
            EstadoBebe.sucio -> "El bebe esta jediondo."
            EstadoBebe.limpio -> "El bebe esta fresco como lechuga."
            EstadoBebe.feliz -> "El bebe esta feliz como una lombriz."
            EstadoBebe.riendo -> "El bebe esta llorando de risa."
            EstadoBebe.molesto -> "El bebe ta'enojao."
        }
    }
}
fun main() {
    /* Crear superpoderes */
    val rayoLaser = SuperPoder("Rayos Láser", false, "Dispara rayos láser con los ojos.")
    val volar = SuperPoder("Volar", false, "Puede volar por los cielos.")
    val superfuerza = SuperPoder("Superfuerza", false, "Levanta objetos muy pesados.")
    val supervelocidad = SuperPoder("Supervelocidad", false, "Corre a grandes velocidades que detiene el tiempo y atraviesa paredes.")
    val invisibilidad = SuperPoder("Invisibilidad", false, "Puede volverse invisible por completo.")
    val cambiartamano = SuperPoder("Cambio_de_tamano", false, "Cambia su tamanio ya sea de una hormiga a un edificio.")

    // Crear camisas y pañales con los valores deseados
    val camisa1 = Camisa("Azul", "SuperMan")
    val panal1 = Panal("Pampers", "Amarillo")

    val camisa2 = Camisa("Rojo", "Los_Increibles")
    val panal2 = Panal("Huggies", "Blanco")

    /* Primer bebe */
    val GuillermoJarias = Bebe("Guillermo Jarias", 50, 10, 70, estado = 
    EstadoBebe.despierto, camisa = camisa1, panal = panal1)
    /* Asignar poderes */
    GuillermoJarias.agregar_capacidad(rayoLaser)
    GuillermoJarias.agregar_capacidad(volar)
    GuillermoJarias.agregar_capacidad(superfuerza)
    
    println("Ha nacido un bebe, su nombre es: ${GuillermoJarias.nombre}")
    GuillermoJarias.revisarBebe()
    
    GuillermoJarias.vestirse()
    println("El estado del bebe es ${GuillermoJarias.estadoActual()}")
    GuillermoJarias.dormir()
    GuillermoJarias.revisarBebe()
    println("El estado del bebe es ${GuillermoJarias.estadoActual()}")
    GuillermoJarias.despertar()
    
    /* Activa sus poderes */
    GuillermoJarias.activar_capacidad("Rayos Láser")
    println("¿Rayos Láser activo? ${rayoLaser.activo}")

    GuillermoJarias.activar_capacidad("Volar")
    println("¿Volar activo? ${volar.activo}")

    GuillermoJarias.activar_capacidad("Superfuerza")
    println("¿Superfuerza activa? ${superfuerza.activo}")
    
    GuillermoJarias.revisarBebe()
    println("El estado del bebe es ${GuillermoJarias.estadoActual()}")
    GuillermoJarias.verTele()
    GuillermoJarias.revisarBebe()
    println("El estado del bebe es ${GuillermoJarias.estadoActual()}")
    GuillermoJarias.hacerleCosquillas()
    GuillermoJarias.revisarBebe()
    println("El estado del bebe es ${GuillermoJarias.estadoActual()}")
    GuillermoJarias.alimentar()
    GuillermoJarias.revisarBebe()
    println("El estado del bebe es ${GuillermoJarias.estadoActual()}")
    GuillermoJarias.llorar()
    GuillermoJarias.revisarBebe()
    println("El estado del bebe es ${GuillermoJarias.estadoActual()}")
    
    /* Desactivar poderes */
    GuillermoJarias.capacidades[0].desactivar()
    println("Rayos Láser activo? ${rayoLaser.activo}")

    GuillermoJarias.capacidades[1].desactivar()
    println("Volar activo? ${volar.activo}")

    GuillermoJarias.capacidades[2].desactivar()
    println("Superfuerza activo? ${superfuerza.activo}")
    
    GuillermoJarias.cambiarPanal()
    
    GuillermoJarias.conectarleSurdazo()
    GuillermoJarias.revisarBebe()
    println("El estado del bebe es ${GuillermoJarias.estadoActual()}")
    GuillermoJarias.despertar()
    println("El estado del bebe es ${GuillermoJarias.estadoActual()}")
    println("")
    
    /* Segundo Bebe */
    val EduardoCota = Bebe("Eduardo Cota", 60, 20, 80, estado = 
    EstadoBebe.despierto, camisa = camisa2, panal = panal2)
    /* Asignar poderes */ 
    EduardoCota.agregar_capacidad(supervelocidad)
    EduardoCota.agregar_capacidad(invisibilidad)
    EduardoCota.agregar_capacidad(cambiartamano)
    
    println("Ha nacido un bebe, su nombre es: ${EduardoCota.nombre}")
    EduardoCota.revisarBebe()
    EduardoCota.vestirse()
    println("El estado del bebe es ${EduardoCota.estadoActual()}")
    EduardoCota.jugar()
    EduardoCota.revisarBebe()
    println("El estado del bebe es ${EduardoCota.estadoActual()}")
    
    /* Activa sus poderes */
    EduardoCota.activar_capacidad("Supervelocidad")
    println("Supervelocidad activa? ${supervelocidad.activo}")

    EduardoCota.activar_capacidad("Invisibilidad")
    println("Invisibilidad activa? ${invisibilidad.activo}")

    EduardoCota.activar_capacidad("Cambio_de_tamano")
    println("Cambio de tamano activo? ${cambiartamano.activo}")
    
    EduardoCota.verTele()
    EduardoCota.revisarBebe()
    println("El estado del bebe es ${EduardoCota.estadoActual()}")
    EduardoCota.alimentar()
    EduardoCota.revisarBebe()
    println("El estado del bebe es ${EduardoCota.estadoActual()}")
    EduardoCota.cambiarPanal()
    EduardoCota.revisarBebe()
    EduardoCota.hacerFeliz()
    EduardoCota.revisarBebe()
    println("El estado del bebe es ${EduardoCota.estadoActual()}")
    EduardoCota.ponerMolesto()
    EduardoCota.revisarBebe()
    println("El estado del bebe es ${EduardoCota.estadoActual()}")
    EduardoCota.llorar()
    EduardoCota.revisarBebe()
    println("El estado del bebe es ${EduardoCota.estadoActual()}")
    
    /* Desactivar poderes */
    EduardoCota.capacidades[0].desactivar()
    println("¿Supervelocidad activo? ${supervelocidad.activo}")

    EduardoCota.capacidades[1].desactivar()
    println("¿Invisibilidad activo? ${invisibilidad.activo}")

    EduardoCota.capacidades[2].desactivar()
    println("¿Cambio_de_tamano activo? ${cambiartamano.activo}")
    
    EduardoCota.cambiarPanal()
    
    EduardoCota.conectarleSurdazo()
    EduardoCota.revisarBebe()
    println("El estado del bebe es ${EduardoCota.estadoActual()}")
    EduardoCota.jugar()
    println("El estado del bebe es ${EduardoCota.estadoActual()}")
}
